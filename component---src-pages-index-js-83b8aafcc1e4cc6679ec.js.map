{"version":3,"file":"component---src-pages-index-js-83b8aafcc1e4cc6679ec.js","mappings":"qPAsCA,EA7BuB,SAAHA,GAAmB,IAAbC,EAAKD,EAALC,MACxB,OAAKA,GACAC,MAAMC,QAAQF,GAGjBG,EAAAA,cAACC,EAAAA,EAAS,KACRD,EAAAA,cAAA,MAAIE,UCde,+CDehBL,EAAMM,KAAI,SAACC,GAAU,IAADC,EACnB,OACEL,EAAAA,cAAA,MAAIM,IAAKF,EAAKG,MACZP,EAAAA,cAACQ,EAAAA,GAAI,CAACC,GAAE,SAAWL,EAAKG,KAAQL,UCjB5B,uCDkBFF,EAAAA,cAACU,EAAAA,EAAW,CAACC,IAAI,GAAGC,MAAOR,EAAKS,UAAUC,cAC1Cd,EAAAA,cAAA,MAAIE,UCjBD,wCDiB2BE,EAAKW,QAErCf,EAAAA,cAAA,YACmB,QAAhBK,EAAAD,EAAKY,mBAAW,IAAAX,OAAA,EAAhBA,EAAkBY,OAAOC,EAAAA,EAAAA,GAAed,EAAKY,cAEhDhB,EAAAA,cAAA,OAAKE,UCvBD,uCDwBFF,EAAAA,cAAA,SAAOE,UAAU,QAAQE,EAAKe,aAC9BnB,EAAAA,cAACoB,EAAAA,EAAI,CAACC,KAAMjB,EAAKiB,QAIzB,MAtBa,IA0BrB,C,uGE5BMC,EAAS,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAeZ,OAfYC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACbC,OAAA,WACE,IAAM/B,EAAQgC,IAAIC,KAAM,0CACjBC,EAAUF,IAAIC,KAAM,wCAAd,GAEb,OACE9B,EAAAA,cAACgC,EAAAA,EAAM,CAACC,SAAUH,KAAKI,MAAMD,UAC3BjC,EAAAA,cAACmC,EAAAA,EAAI,CACHvB,MAAOmB,EAAOlB,UAAUC,YACxBC,MAAOgB,EAAOK,KACdC,QAASN,EAAOO,WAElBtC,EAAAA,cAACuC,EAAAA,EAAc,CAAC1C,MAAOA,IAG7B,EAACyB,CAAA,CAfY,CAAStB,EAAAA,WAkBxB,W","sources":["webpack://contentful-starter-gatsby-blog/./src/components/article-preview.js","webpack://contentful-starter-gatsby-blog/./src/components/article-preview.module.css","webpack://contentful-starter-gatsby-blog/./src/pages/index.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { renderRichText } from 'gatsby-source-contentful/rich-text'\n\nimport Container from './container'\nimport Tags from './tags'\nimport * as styles from './article-preview.module.css'\n\nconst ArticlePreview = ({ posts }) => {\n  if (!posts) return null\n  if (!Array.isArray(posts)) return null\n\n  return (\n    <Container>\n      <ul className={styles.articleList}>\n        {posts.map((post) => {\n          return (\n            <li key={post.slug}>\n              <Link to={`/blog/${post.slug}`} className={styles.link}>\n                <GatsbyImage alt=\"\" image={post.heroImage.gatsbyImage} />\n                <h2 className={styles.title}>{post.title}</h2>\n              </Link>\n              <div>\n                {post.description?.raw && renderRichText(post.description)}\n              </div>\n              <div className={styles.meta}>\n                <small className=\"meta\">{post.publishDate}</small>\n                <Tags tags={post.tags} />\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </Container>\n  )\n}\n\nexport default ArticlePreview\n","// extracted by mini-css-extract-plugin\nexport var articleList = \"article-preview-module--article-list--a632f\";\nexport var link = \"article-preview-module--link--1e0ea\";\nexport var meta = \"article-preview-module--meta--1cf85\";\nexport var title = \"article-preview-module--title--bc587\";","import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Layout from '../components/layout'\nimport Hero from '../components/hero'\nimport ArticlePreview from '../components/article-preview'\n\nclass RootIndex extends React.Component {\n  render() {\n    const posts = get(this, 'props.data.allContentfulBlogPost.nodes')\n    const [author] = get(this, 'props.data.allContentfulPerson.nodes')\n\n    return (\n      <Layout location={this.props.location}>\n        <Hero\n          image={author.heroImage.gatsbyImage}\n          title={author.name}\n          content={author.shortBio}\n        />\n        <ArticlePreview posts={posts} />\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    allContentfulBlogPost(sort: { publishDate: DESC }) {\n      nodes {\n        title\n        slug\n        publishDate(formatString: \"MMMM Do, YYYY\")\n        tags\n        heroImage {\n          gatsbyImage(\n            layout: FULL_WIDTH\n            placeholder: BLURRED\n            width: 424\n            height: 212\n          )\n        }\n        description {\n          raw\n        }\n      }\n    }\n    allContentfulPerson(\n      filter: { contentful_id: { eq: \"15jwOBqpxqSAOy2eOO4S0m\" } }\n    ) {\n      nodes {\n        name\n        shortBio {\n          raw\n        }\n        title\n        heroImage: image {\n          gatsbyImage(layout: CONSTRAINED, placeholder: BLURRED, width: 1180)\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","posts","Array","isArray","React","Container","className","map","post","_post$description","key","slug","Link","to","GatsbyImage","alt","image","heroImage","gatsbyImage","title","description","raw","renderRichText","publishDate","Tags","tags","RootIndex","_React$Component","apply","arguments","_inheritsLoose","prototype","render","get","this","author","Layout","location","props","Hero","name","content","shortBio","ArticlePreview"],"sourceRoot":""}